// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XuLyKhoaLuan.Data;

#nullable disable

namespace XuLyKhoaLuan.Migrations
{
    [DbContext(typeof(XuLyKhoaLuanContext))]
    [Migration("20230611081221_create_table_GapMatHDs")]
    partial class create_table_GapMatHDs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Baocao", b =>
                {
                    b.Property<string>("MaCv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaCV");

                    b.Property<string>("MaSv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaSV");

                    b.Property<string>("NamHoc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Dot")
                        .HasColumnType("int");

                    b.Property<int>("LanNop")
                        .HasColumnType("int");

                    b.Property<string>("FileBc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("File_BC");

                    b.Property<DateTime?>("ThoiGianNop")
                        .HasColumnType("datetime");

                    b.HasKey("MaCv", "MaSv", "NamHoc", "Dot", "LanNop");

                    b.HasIndex(new[] { "MaSv", "NamHoc", "Dot" }, "IX_BAOCAO_MaSV_NamHoc_Dot");

                    b.ToTable("BAOCAO", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Binhluan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Dot")
                        .HasColumnType("int");

                    b.Property<string>("MaCv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaCV");

                    b.Property<string>("MaSv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaSV");

                    b.Property<string>("NamHoc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGian")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "MaCv" }, "IX_BINHLUAN_MaCV");

                    b.HasIndex(new[] { "MaSv", "NamHoc", "Dot" }, "IX_BINHLUAN_MaSV_NamHoc_Dot");

                    b.ToTable("BINHLUAN", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Bomon", b =>
                {
                    b.Property<string>("MaBm")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaBM");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MaKhoa")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Sdt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("SDT");

                    b.Property<string>("TenBm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TenBM");

                    b.HasKey("MaBm");

                    b.HasIndex(new[] { "MaKhoa" }, "IX_BOMON_MaKhoa");

                    b.ToTable("BOMON", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Chuyennganh", b =>
                {
                    b.Property<string>("MaCn")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaCN");

                    b.Property<string>("MaKhoa")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("TenCn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TenCN");

                    b.HasKey("MaCn");

                    b.HasIndex(new[] { "MaKhoa" }, "IX_CHUYENNGANH_MaKhoa");

                    b.ToTable("CHUYENNGANH", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Congviec", b =>
                {
                    b.Property<string>("MaCv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaCV");

                    b.Property<DateTime?>("HanChot")
                        .HasColumnType("datetime");

                    b.Property<string>("MaDt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaDT");

                    b.Property<string>("MaGv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaGV");

                    b.Property<string>("MaNhom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("MucDoHoanThanh")
                        .HasColumnType("float");

                    b.Property<string>("TenCv")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TenCV");

                    b.Property<string>("YeuCau")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaCv");

                    b.HasIndex(new[] { "MaGv", "MaDt" }, "IX_CONGVIEC_MaGV_MaDT");

                    b.HasIndex(new[] { "MaNhom" }, "IX_CONGVIEC_MaNhom");

                    b.ToTable("CONGVIEC", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Dangky", b =>
                {
                    b.Property<string>("MaNhom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MaDt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaDT");

                    b.Property<DateTime?>("NgayBd")
                        .HasColumnType("date")
                        .HasColumnName("NgayBD");

                    b.Property<DateTime>("NgayDk")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayDK");

                    b.Property<DateTime?>("NgayGiao")
                        .HasColumnType("date");

                    b.Property<DateTime?>("NgayKt")
                        .HasColumnType("date")
                        .HasColumnName("NgayKT");

                    b.HasKey("MaNhom", "MaDt");

                    b.HasIndex(new[] { "MaDt" }, "IX_DANGKY_MaDT");

                    b.ToTable("DANGKY", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Detai", b =>
                {
                    b.Property<string>("MaDt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaDT");

                    b.Property<int?>("Dot")
                        .HasColumnType("int");

                    b.Property<string>("NamHoc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Slmax")
                        .HasColumnType("int")
                        .HasColumnName("SLMax");

                    b.Property<int?>("Slmin")
                        .HasColumnType("int")
                        .HasColumnName("SLMin");

                    b.Property<string>("TenDt")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)")
                        .HasColumnName("TenDT");

                    b.Property<string>("TomTat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaDt");

                    b.HasIndex(new[] { "NamHoc", "Dot" }, "IX_DETAI_NamHoc_Dot");

                    b.HasIndex(new[] { "TenDt" }, "UQ__DETAI__4CF96562B36CF50C")
                        .IsUnique();

                    b.ToTable("DETAI", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.DetaiChuyennganh", b =>
                {
                    b.Property<string>("MaCn")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaCN");

                    b.Property<string>("MaDt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaDT");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaCn", "MaDt");

                    b.HasIndex(new[] { "MaDt" }, "IX_DETAI_CHUYENNGANH_MaDT");

                    b.ToTable("DETAI_CHUYENNGANH", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Dotdk", b =>
                {
                    b.Property<string>("NamHoc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Dot")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayBd")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayBD");

                    b.Property<DateTime?>("NgayKt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayKT");

                    b.Property<DateTime?>("Tgbddk")
                        .HasColumnType("datetime")
                        .HasColumnName("TGBDDK");

                    b.Property<DateTime?>("Tgktdk")
                        .HasColumnType("datetime")
                        .HasColumnName("TGKTDK");

                    b.HasKey("NamHoc", "Dot");

                    b.ToTable("DOTDK", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Duyetdt", b =>
                {
                    b.Property<string>("MaGv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaGV");

                    b.Property<string>("MaDt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaDT");

                    b.Property<int>("LanDuyet")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDuyet")
                        .HasColumnType("datetime");

                    b.Property<string>("NhanXet")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaGv", "MaDt", "LanDuyet");

                    b.HasIndex(new[] { "MaDt" }, "IX_DUYETDT_MaDT");

                    b.ToTable("DUYETDT", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Giangvien", b =>
                {
                    b.Property<string>("MaGv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaGV");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GioiTinh")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("HocHam")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HocVi")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MaBm")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaBM");

                    b.Property<DateTime?>("NgayNghi")
                        .HasColumnType("date");

                    b.Property<DateTime?>("NgayNhanViec")
                        .HasColumnType("date");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("Sdt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("SDT");

                    b.Property<string>("TenGv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TenGV");

                    b.HasKey("MaGv");

                    b.HasIndex(new[] { "MaBm" }, "IX_GIANGVIEN_MaBM");

                    b.ToTable("GIANGVIEN", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Giaovu", b =>
                {
                    b.Property<string>("MaGv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaGV");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GioiTinh")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("MaKhoa")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime?>("NgayNghi")
                        .HasColumnType("date");

                    b.Property<DateTime?>("NgayNhanViec")
                        .HasColumnType("date");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("Sdt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("SDT");

                    b.Property<string>("TenGv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TenGV");

                    b.HasKey("MaGv");

                    b.HasIndex(new[] { "MaKhoa" }, "IX_GIAOVU_MaKhoa");

                    b.ToTable("GIAOVU", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Hdcham", b =>
                {
                    b.Property<string>("MaGv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaGV");

                    b.Property<string>("MaDt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaDT");

                    b.Property<string>("MaSv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaSV");

                    b.Property<string>("NamHoc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Dot")
                        .HasColumnType("int");

                    b.Property<double?>("Diem")
                        .HasColumnType("float");

                    b.Property<double?>("HeSo")
                        .HasColumnType("float");

                    b.HasKey("MaGv", "MaDt", "MaSv", "NamHoc", "Dot");

                    b.HasIndex(new[] { "MaSv", "NamHoc", "Dot" }, "IX_HDCHAM_MaSV_NamHoc_Dot");

                    b.ToTable("HDCHAM", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Hdgopy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("MaCv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaCV");

                    b.Property<string>("MaDt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaDT");

                    b.Property<string>("MaGv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaGV");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGian")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "MaCv" }, "IX_HDGOPY_MaCV");

                    b.HasIndex(new[] { "MaGv", "MaDt" }, "IX_HDGOPY_MaGV_MaDT");

                    b.ToTable("HDGOPY", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Hdpbcham", b =>
                {
                    b.Property<string>("MaGv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaGV");

                    b.Property<string>("MaHd")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("MaHD");

                    b.Property<string>("MaDt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaDT");

                    b.Property<string>("MaSv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaSV");

                    b.Property<string>("NamHoc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Dot")
                        .HasColumnType("int");

                    b.Property<double?>("Diem")
                        .HasColumnType("float");

                    b.Property<double?>("HeSo")
                        .HasColumnType("float");

                    b.HasKey("MaGv", "MaHd", "MaDt", "MaSv", "NamHoc", "Dot");

                    b.HasIndex(new[] { "MaSv", "NamHoc", "Dot" }, "IX_HDPBCHAM_MaSV_NamHoc_Dot");

                    b.ToTable("HDPBCHAM", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Hdpbnhanxet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("MaDt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaDT");

                    b.Property<string>("MaGv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaGV");

                    b.Property<string>("MaHd")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("MaHD");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGian")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "MaGv", "MaHd", "MaDt" }, "IX_HDPBNHANXET_MaGV_MaHD_MaDT");

                    b.ToTable("HDPBNHANXET", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Hdphanbien", b =>
                {
                    b.Property<string>("MaGv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaGV");

                    b.Property<string>("MaHd")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("MaHD");

                    b.Property<string>("MaDt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaDT");

                    b.Property<double?>("Diem")
                        .HasColumnType("float");

                    b.HasKey("MaGv", "MaHd", "MaDt")
                        .HasName("PK_CHAMDIEM");

                    b.HasIndex(new[] { "MaDt" }, "IX_HDPHANBIEN_MaDT");

                    b.HasIndex(new[] { "MaHd", "MaGv" }, "IX_HDPHANBIEN_MaHD_MaGV");

                    b.ToTable("HDPHANBIEN", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Hoidong", b =>
                {
                    b.Property<string>("MaHd")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("MaHD");

                    b.Property<string>("DiaDiem")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaBm")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaBM");

                    b.Property<DateTime?>("NgayLap")
                        .HasColumnType("date");

                    b.Property<string>("TenHd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TenHD");

                    b.Property<DateTime?>("ThoiGianBd")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThoiGianKt")
                        .HasColumnType("datetime");

                    b.HasKey("MaHd");

                    b.HasIndex(new[] { "MaBm" }, "IX_HOIDONG_MaBM");

                    b.ToTable("HOIDONG", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Huongdan", b =>
                {
                    b.Property<string>("MaGv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaGV");

                    b.Property<string>("MaDt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaDT");

                    b.Property<string>("DiaDiem")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("DuaRaHd")
                        .HasColumnType("bit")
                        .HasColumnName("DuaRaHD");

                    b.Property<DateTime?>("ThoiGianBd")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThoiGianKt")
                        .HasColumnType("datetime");

                    b.HasKey("MaGv", "MaDt");

                    b.HasIndex(new[] { "MaDt" }, "IX_HUONGDAN_MaDT");

                    b.ToTable("HUONGDAN", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Kehoach", b =>
                {
                    b.Property<int>("MaKh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaKH");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKh"), 1L, 1);

                    b.Property<string>("FileKh")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FileKH");

                    b.Property<string>("HinhAnh")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MaBm")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaBM");

                    b.Property<string>("MaKhoa")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int>("SoLuongDt")
                        .HasColumnType("int")
                        .HasColumnName("SoLuongDT");

                    b.Property<string>("TenKh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TenKH");

                    b.Property<DateTime?>("ThoiGianBd")
                        .HasColumnType("datetime")
                        .HasColumnName("ThoiGianBD");

                    b.Property<DateTime?>("ThoiGianKt")
                        .HasColumnType("datetime")
                        .HasColumnName("ThoiGianKT");

                    b.HasKey("MaKh");

                    b.HasIndex(new[] { "MaBm" }, "IX_KEHOACH_MaBM");

                    b.HasIndex(new[] { "MaKhoa" }, "IX_KEHOACH_MaKhoa");

                    b.ToTable("KEHOACH", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Khoa", b =>
                {
                    b.Property<string>("MaKhoa")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phong")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Sdt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("SDT");

                    b.Property<string>("TenKhoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKhoa");

                    b.ToTable("KHOA", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Loimoi", b =>
                {
                    b.Property<string>("MaSv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaSV");

                    b.Property<string>("NamHoc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Dot")
                        .HasColumnType("int");

                    b.Property<string>("MaNhom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LoiNhan")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime?>("ThoiGian")
                        .HasColumnType("datetime");

                    b.Property<bool?>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaSv", "NamHoc", "Dot", "MaNhom");

                    b.HasIndex(new[] { "MaNhom" }, "IX_LOIMOI_MaNhom");

                    b.ToTable("LOIMOI", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Nhiemvu", b =>
                {
                    b.Property<int>("MaNv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaNV");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNv"), 1L, 1);

                    b.Property<string>("FileNv")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FileNV");

                    b.Property<string>("HinhAnh")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MaBm")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaBM");

                    b.Property<string>("MaGv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaGV");

                    b.Property<int>("SoLuongDt")
                        .HasColumnType("int")
                        .HasColumnName("SoLuongDT");

                    b.Property<string>("TenNv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TenNV");

                    b.Property<DateTime?>("ThoiGianBd")
                        .HasColumnType("datetime")
                        .HasColumnName("ThoiGianBD");

                    b.Property<DateTime?>("ThoiGianKt")
                        .HasColumnType("datetime")
                        .HasColumnName("ThoiGianKT");

                    b.HasKey("MaNv");

                    b.HasIndex(new[] { "MaBm" }, "IX_NHIEMVU_MaBM");

                    b.HasIndex(new[] { "MaGv" }, "IX_NHIEMVU_MaGV");

                    b.ToTable("NHIEMVU", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Nhom", b =>
                {
                    b.Property<string>("MaNhom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TenNhom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhom");

                    b.ToTable("NHOM", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Pbcham", b =>
                {
                    b.Property<string>("MaGv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaGV");

                    b.Property<string>("MaDt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaDT");

                    b.Property<string>("MaSv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaSV");

                    b.Property<string>("NamHoc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Dot")
                        .HasColumnType("int");

                    b.Property<double?>("Diem")
                        .HasColumnType("float");

                    b.HasKey("MaGv", "MaDt", "MaSv", "NamHoc", "Dot");

                    b.HasIndex(new[] { "MaSv", "NamHoc", "Dot" }, "IX_PBCHAM_MaSV_NamHoc_Dot");

                    b.ToTable("PBCHAM", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Pbnhanxet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("MaDt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaDT");

                    b.Property<string>("MaGv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaGV");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGian")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "MaGv", "MaDt" }, "IX_PBNHANXET_MaGV_MaDT");

                    b.ToTable("PBNHANXET", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Phanbien", b =>
                {
                    b.Property<string>("MaGv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaGV");

                    b.Property<string>("MaDt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaDT");

                    b.Property<string>("DiaDiem")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("DuaRaHd")
                        .HasColumnType("bit")
                        .HasColumnName("DuaRaHD");

                    b.Property<DateTime?>("ThoiGianBd")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThoiGianKt")
                        .HasColumnType("datetime");

                    b.HasKey("MaGv", "MaDt");

                    b.HasIndex(new[] { "MaDt" }, "IX_PHANBIEN_MaDT");

                    b.ToTable("PHANBIEN", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Rade", b =>
                {
                    b.Property<string>("MaGv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaGV");

                    b.Property<string>("MaDt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaDT");

                    b.Property<DateTime?>("ThoiGian")
                        .HasColumnType("datetime");

                    b.HasKey("MaGv", "MaDt");

                    b.HasIndex(new[] { "MaDt" }, "IX_RADE_MaDT");

                    b.ToTable("RADE", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Sinhvien", b =>
                {
                    b.Property<string>("MaSv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaSV");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GioiTinh")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Lop")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MaCn")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaCN");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("Sdt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("SDT");

                    b.Property<string>("TenSv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TenSV");

                    b.HasKey("MaSv");

                    b.HasIndex(new[] { "MaCn" }, "IX_SINHVIEN_MaCN");

                    b.ToTable("SINHVIEN", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Thamgiahd", b =>
                {
                    b.Property<string>("MaHd")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("MaHD");

                    b.Property<string>("MaGv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaGV");

                    b.Property<string>("MaVt")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaVT");

                    b.HasKey("MaHd", "MaGv");

                    b.HasIndex(new[] { "MaGv" }, "IX_THAMGIAHD_MaGV");

                    b.HasIndex(new[] { "MaVt" }, "IX_THAMGIAHD_MaVT");

                    b.ToTable("THAMGIAHD", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Thamgium", b =>
                {
                    b.Property<string>("MaSv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaSV");

                    b.Property<string>("NamHoc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Dot")
                        .HasColumnType("int");

                    b.Property<double?>("DiemTb")
                        .HasColumnType("float")
                        .HasColumnName("DiemTB");

                    b.Property<string>("MaNhom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("TruongNhom")
                        .HasColumnType("bit");

                    b.HasKey("MaSv", "NamHoc", "Dot");

                    b.HasIndex(new[] { "NamHoc", "Dot" }, "IX_THAMGIA_NamHoc_Dot");

                    b.ToTable("THAMGIA", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Thongbao", b =>
                {
                    b.Property<int>("MaTb")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaTB");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTb"), 1L, 1);

                    b.Property<string>("FileTb")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FileTB");

                    b.Property<string>("HinhAnh")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaKhoa")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime?>("NgayTb")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayTB");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TenTB");

                    b.HasKey("MaTb");

                    b.HasIndex(new[] { "MaKhoa" }, "IX_THONGBAO_MaKhoa");

                    b.ToTable("THONGBAO", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Truongbm", b =>
                {
                    b.Property<int>("MaTbm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaTBM");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTbm"), 1L, 1);

                    b.Property<string>("MaBm")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaBM");

                    b.Property<string>("MaGv")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaGV");

                    b.Property<DateTime?>("NgayNghi")
                        .HasColumnType("date");

                    b.Property<DateTime?>("NgayNhanChuc")
                        .HasColumnType("date");

                    b.HasKey("MaTbm");

                    b.HasIndex(new[] { "MaBm" }, "IX_TRUONGBM_MaBM");

                    b.HasIndex(new[] { "MaGv" }, "IX_TRUONGBM_MaGV");

                    b.ToTable("TRUONGBM", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Truongkhoa", b =>
                {
                    b.Property<int>("MaTk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaTK");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTk"), 1L, 1);

                    b.Property<string>("MaGv")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaGV");

                    b.Property<string>("MaKhoa")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime?>("NgayNghi")
                        .HasColumnType("date");

                    b.Property<DateTime>("NgayNhanChuc")
                        .HasColumnType("date");

                    b.HasKey("MaTk");

                    b.HasIndex(new[] { "MaGv" }, "IX_TRUONGKHOA_MaGV");

                    b.HasIndex(new[] { "MaKhoa" }, "IX_TRUONGKHOA_MaKhoa");

                    b.ToTable("TRUONGKHOA", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Vaitro", b =>
                {
                    b.Property<string>("MaVt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaVT");

                    b.Property<string>("TenVaiTro")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaVt");

                    b.ToTable("VAITRO", (string)null);
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Xacnhan", b =>
                {
                    b.Property<string>("MaGv")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaGV");

                    b.Property<string>("MaDt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MaDT");

                    b.Property<bool?>("DuaRaHd")
                        .HasColumnType("bit")
                        .HasColumnName("DuaRaHD");

                    b.HasKey("MaGv", "MaDt");

                    b.HasIndex(new[] { "MaDt" }, "IX_XACNHAN_MaDT");

                    b.ToTable("XACNHAN", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XuLyKhoaLuan.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Baocao", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Congviec", "MaCvNavigation")
                        .WithMany("Baocaos")
                        .HasForeignKey("MaCv")
                        .IsRequired()
                        .HasConstraintName("FK_BAOCAO_CONGVIEC");

                    b.HasOne("XuLyKhoaLuan.Data.Thamgium", "Thamgium")
                        .WithMany("Baocaos")
                        .HasForeignKey("MaSv", "NamHoc", "Dot")
                        .IsRequired()
                        .HasConstraintName("FK_BAOCAO_THAMGIA");

                    b.Navigation("MaCvNavigation");

                    b.Navigation("Thamgium");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Binhluan", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Congviec", "MaCvNavigation")
                        .WithMany("Binhluans")
                        .HasForeignKey("MaCv")
                        .HasConstraintName("FK_BINHLUAN_CONGVIEC");

                    b.HasOne("XuLyKhoaLuan.Data.Thamgium", "Thamgium")
                        .WithMany("Binhluans")
                        .HasForeignKey("MaSv", "NamHoc", "Dot")
                        .HasConstraintName("FK_BINHLUAN_THAMGIA");

                    b.Navigation("MaCvNavigation");

                    b.Navigation("Thamgium");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Bomon", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Khoa", "MaKhoaNavigation")
                        .WithMany("Bomons")
                        .HasForeignKey("MaKhoa")
                        .HasConstraintName("FK_BOMON_KHOA");

                    b.Navigation("MaKhoaNavigation");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Chuyennganh", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Khoa", "MaKhoaNavigation")
                        .WithMany("Chuyennganhs")
                        .HasForeignKey("MaKhoa")
                        .HasConstraintName("FK_CHUYENNGANH_KHOA");

                    b.Navigation("MaKhoaNavigation");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Congviec", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Nhom", "MaNhomNavigation")
                        .WithMany("Congviecs")
                        .HasForeignKey("MaNhom")
                        .HasConstraintName("FK_CONGVIEC_NHOM");

                    b.HasOne("XuLyKhoaLuan.Data.Huongdan", "Ma")
                        .WithMany("Congviecs")
                        .HasForeignKey("MaGv", "MaDt")
                        .HasConstraintName("FK_CONGVIEC_HUONGDAN");

                    b.Navigation("Ma");

                    b.Navigation("MaNhomNavigation");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Dangky", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Detai", "MaDtNavigation")
                        .WithMany("Dangkies")
                        .HasForeignKey("MaDt")
                        .IsRequired()
                        .HasConstraintName("FK_DANGKY_DETAI");

                    b.HasOne("XuLyKhoaLuan.Data.Nhom", "MaNhomNavigation")
                        .WithMany("Dangkies")
                        .HasForeignKey("MaNhom")
                        .IsRequired()
                        .HasConstraintName("FK_DANGKY_NHOM");

                    b.Navigation("MaDtNavigation");

                    b.Navigation("MaNhomNavigation");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Detai", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Dotdk", "Dotdk")
                        .WithMany("Detais")
                        .HasForeignKey("NamHoc", "Dot")
                        .HasConstraintName("FK_DETAI_DOTDK");

                    b.Navigation("Dotdk");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.DetaiChuyennganh", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Chuyennganh", "MaCnNavigation")
                        .WithMany("DetaiChuyennganhs")
                        .HasForeignKey("MaCn")
                        .IsRequired()
                        .HasConstraintName("FK_DT_CN_CHUYENNGANH");

                    b.HasOne("XuLyKhoaLuan.Data.Detai", "MaDtNavigation")
                        .WithMany("DetaiChuyennganhs")
                        .HasForeignKey("MaDt")
                        .IsRequired()
                        .HasConstraintName("FK_DT_CN_DETAI");

                    b.Navigation("MaCnNavigation");

                    b.Navigation("MaDtNavigation");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Duyetdt", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Detai", "MaDtNavigation")
                        .WithMany("Duyetdts")
                        .HasForeignKey("MaDt")
                        .IsRequired()
                        .HasConstraintName("FK_DUYETDT_DETAI");

                    b.HasOne("XuLyKhoaLuan.Data.Giangvien", "MaGvNavigation")
                        .WithMany("Duyetdts")
                        .HasForeignKey("MaGv")
                        .IsRequired()
                        .HasConstraintName("FK_DUYETDT_GIANGVIEN");

                    b.Navigation("MaDtNavigation");

                    b.Navigation("MaGvNavigation");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Giangvien", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Bomon", "MaBmNavigation")
                        .WithMany("Giangviens")
                        .HasForeignKey("MaBm")
                        .HasConstraintName("FK_GIANGVIEN_BOMON");

                    b.Navigation("MaBmNavigation");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Giaovu", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Khoa", "MaKhoaNavigation")
                        .WithMany("Giaovus")
                        .HasForeignKey("MaKhoa")
                        .HasConstraintName("FK_GIAOVU_KHOA");

                    b.Navigation("MaKhoaNavigation");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Hdcham", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Huongdan", "Ma")
                        .WithMany("Hdchams")
                        .HasForeignKey("MaGv", "MaDt")
                        .IsRequired()
                        .HasConstraintName("FK_HDCHAM_HUONGDAN");

                    b.HasOne("XuLyKhoaLuan.Data.Thamgium", "Thamgium")
                        .WithMany("Hdchams")
                        .HasForeignKey("MaSv", "NamHoc", "Dot")
                        .IsRequired()
                        .HasConstraintName("FK_HDCHAM_THAMGIA");

                    b.Navigation("Ma");

                    b.Navigation("Thamgium");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Hdgopy", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Congviec", "MaCvNavigation")
                        .WithMany("Hdgopies")
                        .HasForeignKey("MaCv")
                        .HasConstraintName("FK_HDGOPY_CONGVIEC");

                    b.HasOne("XuLyKhoaLuan.Data.Huongdan", "Ma")
                        .WithMany("Hdgopies")
                        .HasForeignKey("MaGv", "MaDt")
                        .HasConstraintName("FK_HDGOPY_HUONGDAN");

                    b.Navigation("Ma");

                    b.Navigation("MaCvNavigation");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Hdpbcham", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Hdphanbien", "Ma")
                        .WithMany("Hdpbchams")
                        .HasForeignKey("MaGv", "MaHd", "MaDt")
                        .IsRequired()
                        .HasConstraintName("FK_HDPBCHAM_HDPHANBIEN");

                    b.HasOne("XuLyKhoaLuan.Data.Thamgium", "Thamgium")
                        .WithMany("Hdpbchams")
                        .HasForeignKey("MaSv", "NamHoc", "Dot")
                        .IsRequired()
                        .HasConstraintName("FK_HDPBCHAM_THAMGIA");

                    b.Navigation("Ma");

                    b.Navigation("Thamgium");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Hdpbnhanxet", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Hdphanbien", "Ma")
                        .WithMany("Hdpbnhanxets")
                        .HasForeignKey("MaGv", "MaHd", "MaDt")
                        .HasConstraintName("FK_HDPBNHANXET_HDPHANBIEN");

                    b.Navigation("Ma");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Hdphanbien", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Detai", "MaDtNavigation")
                        .WithMany("Hdphanbiens")
                        .HasForeignKey("MaDt")
                        .IsRequired()
                        .HasConstraintName("FK_HDPHANBIEN_DETAI");

                    b.HasOne("XuLyKhoaLuan.Data.Thamgiahd", "Ma")
                        .WithMany("Hdphanbiens")
                        .HasForeignKey("MaHd", "MaGv")
                        .IsRequired()
                        .HasConstraintName("FK_HDPHANBIEN_THAMGIAHD");

                    b.Navigation("Ma");

                    b.Navigation("MaDtNavigation");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Hoidong", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Bomon", "MaBmNavigation")
                        .WithMany("Hoidongs")
                        .HasForeignKey("MaBm")
                        .HasConstraintName("FK_HOIDONG_BOMON");

                    b.Navigation("MaBmNavigation");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Huongdan", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Detai", "MaDtNavigation")
                        .WithMany("Huongdans")
                        .HasForeignKey("MaDt")
                        .IsRequired()
                        .HasConstraintName("FK_HUONGDAN_DETAI");

                    b.HasOne("XuLyKhoaLuan.Data.Giangvien", "MaGvNavigation")
                        .WithMany("Huongdans")
                        .HasForeignKey("MaGv")
                        .IsRequired()
                        .HasConstraintName("FK_HUONGDAN_GIANGVIEN");

                    b.Navigation("MaDtNavigation");

                    b.Navigation("MaGvNavigation");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Kehoach", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Bomon", "MaBmNavigation")
                        .WithMany("Kehoaches")
                        .HasForeignKey("MaBm")
                        .HasConstraintName("FK_KEHOACH_BOMON");

                    b.HasOne("XuLyKhoaLuan.Data.Khoa", "MaKhoaNavigation")
                        .WithMany("Kehoaches")
                        .HasForeignKey("MaKhoa")
                        .HasConstraintName("FK_KEHOACH_KHOA");

                    b.Navigation("MaBmNavigation");

                    b.Navigation("MaKhoaNavigation");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Loimoi", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Nhom", "MaNhomNavigation")
                        .WithMany("Loimois")
                        .HasForeignKey("MaNhom")
                        .IsRequired()
                        .HasConstraintName("FK_LOIMOI_NHOM");

                    b.HasOne("XuLyKhoaLuan.Data.Thamgium", "Thamgium")
                        .WithMany("Loimois")
                        .HasForeignKey("MaSv", "NamHoc", "Dot")
                        .IsRequired()
                        .HasConstraintName("FK_LOIMOI_THAMGIA");

                    b.Navigation("MaNhomNavigation");

                    b.Navigation("Thamgium");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Nhiemvu", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Bomon", "MaBmNavigation")
                        .WithMany("Nhiemvus")
                        .HasForeignKey("MaBm")
                        .HasConstraintName("FK_NHIEMVU_BOMON");

                    b.HasOne("XuLyKhoaLuan.Data.Giangvien", "MaGvNavigation")
                        .WithMany("Nhiemvus")
                        .HasForeignKey("MaGv")
                        .HasConstraintName("FK_NHIEMVU_GIANGVIEN");

                    b.Navigation("MaBmNavigation");

                    b.Navigation("MaGvNavigation");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Pbcham", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Phanbien", "Ma")
                        .WithMany("Pbchams")
                        .HasForeignKey("MaGv", "MaDt")
                        .IsRequired()
                        .HasConstraintName("FK_PBCHAM_PHANBIEN");

                    b.HasOne("XuLyKhoaLuan.Data.Thamgium", "Thamgium")
                        .WithMany("Pbchams")
                        .HasForeignKey("MaSv", "NamHoc", "Dot")
                        .IsRequired()
                        .HasConstraintName("FK_PBCHAM_THAMGIA");

                    b.Navigation("Ma");

                    b.Navigation("Thamgium");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Pbnhanxet", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Phanbien", "Ma")
                        .WithMany("Pbnhanxets")
                        .HasForeignKey("MaGv", "MaDt")
                        .HasConstraintName("FK_PBNHANXET_PHANBIEN");

                    b.Navigation("Ma");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Phanbien", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Detai", "MaDtNavigation")
                        .WithMany("Phanbiens")
                        .HasForeignKey("MaDt")
                        .IsRequired()
                        .HasConstraintName("FK_PHANBIEN_DETAI");

                    b.HasOne("XuLyKhoaLuan.Data.Giangvien", "MaGvNavigation")
                        .WithMany("Phanbiens")
                        .HasForeignKey("MaGv")
                        .IsRequired()
                        .HasConstraintName("FK_PHANBIEN_GIANGVIEN");

                    b.Navigation("MaDtNavigation");

                    b.Navigation("MaGvNavigation");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Rade", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Detai", "MaDtNavigation")
                        .WithMany("Rades")
                        .HasForeignKey("MaDt")
                        .IsRequired()
                        .HasConstraintName("FK_RADE_DETAI");

                    b.HasOne("XuLyKhoaLuan.Data.Giangvien", "MaGvNavigation")
                        .WithMany("Rades")
                        .HasForeignKey("MaGv")
                        .IsRequired()
                        .HasConstraintName("FK_RADE_GIANGVIEN");

                    b.Navigation("MaDtNavigation");

                    b.Navigation("MaGvNavigation");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Sinhvien", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Chuyennganh", "MaCnNavigation")
                        .WithMany("Sinhviens")
                        .HasForeignKey("MaCn")
                        .HasConstraintName("FK_SINHVIEN_CHUYENNGANH");

                    b.Navigation("MaCnNavigation");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Thamgiahd", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Giangvien", "MaGvNavigation")
                        .WithMany("Thamgiahds")
                        .HasForeignKey("MaGv")
                        .IsRequired()
                        .HasConstraintName("FK_THAMGIAHD_GIANGVIEN");

                    b.HasOne("XuLyKhoaLuan.Data.Hoidong", "MaHdNavigation")
                        .WithMany("Thamgiahds")
                        .HasForeignKey("MaHd")
                        .IsRequired()
                        .HasConstraintName("FK_THAMGIAHD_HOIDONG");

                    b.HasOne("XuLyKhoaLuan.Data.Vaitro", "MaVtNavigation")
                        .WithMany("Thamgiahds")
                        .HasForeignKey("MaVt")
                        .IsRequired()
                        .HasConstraintName("FK_THAMGIAHD_VAITRO");

                    b.Navigation("MaGvNavigation");

                    b.Navigation("MaHdNavigation");

                    b.Navigation("MaVtNavigation");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Thamgium", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Sinhvien", "MaSvNavigation")
                        .WithMany("Thamgia")
                        .HasForeignKey("MaSv")
                        .IsRequired()
                        .HasConstraintName("FK_THAMGIA_SINHVIEN");

                    b.HasOne("XuLyKhoaLuan.Data.Dotdk", "Dotdk")
                        .WithMany("Thamgia")
                        .HasForeignKey("NamHoc", "Dot")
                        .IsRequired()
                        .HasConstraintName("FK_THAMGIA_DOTDK");

                    b.Navigation("Dotdk");

                    b.Navigation("MaSvNavigation");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Thongbao", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Khoa", "MaKhoaNavigation")
                        .WithMany("Thongbaos")
                        .HasForeignKey("MaKhoa")
                        .HasConstraintName("FK_THONGBAO_KHOA");

                    b.Navigation("MaKhoaNavigation");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Truongbm", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Bomon", "MaBmNavigation")
                        .WithMany("Truongbms")
                        .HasForeignKey("MaBm")
                        .IsRequired()
                        .HasConstraintName("FK_TRUONGBM_BOMON");

                    b.HasOne("XuLyKhoaLuan.Data.Giangvien", "MaGvNavigation")
                        .WithMany("Truongbms")
                        .HasForeignKey("MaGv")
                        .IsRequired()
                        .HasConstraintName("FK_TRUONGBM_GIANGVIEN");

                    b.Navigation("MaBmNavigation");

                    b.Navigation("MaGvNavigation");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Truongkhoa", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Giangvien", "MaGvNavigation")
                        .WithMany("Truongkhoas")
                        .HasForeignKey("MaGv")
                        .IsRequired()
                        .HasConstraintName("FK_TRUONGKHOA_GIANGVIEN");

                    b.HasOne("XuLyKhoaLuan.Data.Khoa", "MaKhoaNavigation")
                        .WithMany("Truongkhoas")
                        .HasForeignKey("MaKhoa")
                        .IsRequired()
                        .HasConstraintName("FK_TRUONGKHOA_KHOA");

                    b.Navigation("MaGvNavigation");

                    b.Navigation("MaKhoaNavigation");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Xacnhan", b =>
                {
                    b.HasOne("XuLyKhoaLuan.Data.Detai", "MaDtNavigation")
                        .WithMany("Xacnhans")
                        .HasForeignKey("MaDt")
                        .IsRequired()
                        .HasConstraintName("FK_XACNHAN_DETAI");

                    b.HasOne("XuLyKhoaLuan.Data.Giangvien", "MaGvNavigation")
                        .WithMany("Xacnhans")
                        .HasForeignKey("MaGv")
                        .IsRequired()
                        .HasConstraintName("FK_XACNHAN_GIANGVIEN");

                    b.Navigation("MaDtNavigation");

                    b.Navigation("MaGvNavigation");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Bomon", b =>
                {
                    b.Navigation("Giangviens");

                    b.Navigation("Hoidongs");

                    b.Navigation("Kehoaches");

                    b.Navigation("Nhiemvus");

                    b.Navigation("Truongbms");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Chuyennganh", b =>
                {
                    b.Navigation("DetaiChuyennganhs");

                    b.Navigation("Sinhviens");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Congviec", b =>
                {
                    b.Navigation("Baocaos");

                    b.Navigation("Binhluans");

                    b.Navigation("Hdgopies");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Detai", b =>
                {
                    b.Navigation("Dangkies");

                    b.Navigation("DetaiChuyennganhs");

                    b.Navigation("Duyetdts");

                    b.Navigation("Hdphanbiens");

                    b.Navigation("Huongdans");

                    b.Navigation("Phanbiens");

                    b.Navigation("Rades");

                    b.Navigation("Xacnhans");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Dotdk", b =>
                {
                    b.Navigation("Detais");

                    b.Navigation("Thamgia");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Giangvien", b =>
                {
                    b.Navigation("Duyetdts");

                    b.Navigation("Huongdans");

                    b.Navigation("Nhiemvus");

                    b.Navigation("Phanbiens");

                    b.Navigation("Rades");

                    b.Navigation("Thamgiahds");

                    b.Navigation("Truongbms");

                    b.Navigation("Truongkhoas");

                    b.Navigation("Xacnhans");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Hdphanbien", b =>
                {
                    b.Navigation("Hdpbchams");

                    b.Navigation("Hdpbnhanxets");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Hoidong", b =>
                {
                    b.Navigation("Thamgiahds");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Huongdan", b =>
                {
                    b.Navigation("Congviecs");

                    b.Navigation("Hdchams");

                    b.Navigation("Hdgopies");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Khoa", b =>
                {
                    b.Navigation("Bomons");

                    b.Navigation("Chuyennganhs");

                    b.Navigation("Giaovus");

                    b.Navigation("Kehoaches");

                    b.Navigation("Thongbaos");

                    b.Navigation("Truongkhoas");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Nhom", b =>
                {
                    b.Navigation("Congviecs");

                    b.Navigation("Dangkies");

                    b.Navigation("Loimois");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Phanbien", b =>
                {
                    b.Navigation("Pbchams");

                    b.Navigation("Pbnhanxets");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Sinhvien", b =>
                {
                    b.Navigation("Thamgia");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Thamgiahd", b =>
                {
                    b.Navigation("Hdphanbiens");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Thamgium", b =>
                {
                    b.Navigation("Baocaos");

                    b.Navigation("Binhluans");

                    b.Navigation("Hdchams");

                    b.Navigation("Hdpbchams");

                    b.Navigation("Loimois");

                    b.Navigation("Pbchams");
                });

            modelBuilder.Entity("XuLyKhoaLuan.Data.Vaitro", b =>
                {
                    b.Navigation("Thamgiahds");
                });
#pragma warning restore 612, 618
        }
    }
}
